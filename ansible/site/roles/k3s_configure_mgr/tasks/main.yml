---
# info: Apt install kubectl and k9s

- name: Install kubectl with Snap
  snap:
    name: kubectl
    classic: true
#  become: true

- name: Install k9s with Snap
  snap:
    name: k9s
#  become: true

# ! After installing k9s with snap on Ubuntu 24.04 LTS, ==Command 'k9s' not found== error is displayed.
# ! This can be fixed with `sudo ln -s /snap/k9s/current/bin/k9s /snap/bin/` command.
# !  Issue is described here: https://github.com/derailed/k9s/issues/2128

- name: Check if k9s symbolic link exists
  stat:
    path: /snap/bin/k9s
  register: k9s_bin_stat

- name: Create a symbolic link for k9s (to fix Command 'k9s' not found error)
  shell: |
    ln -s /snap/k9s/current/bin/k9s /snap/bin/
  become: true    
  changed_when: false  # Ensure task is marked as "ok" instead of "changed" in the output  
  when: 
    - not k9s_bin_stat.stat.exists

# info: Configure kubectl for K3s Manager

# note: Copy /etc/rancher/k3s/k3s.yaml on your machine located outside the cluster as ~/.kube/config. Then replace the value of the server field with the IP or name of your K3s server. kubectl can now manage your K3s cluster.

- name: Ensure .kube directory exists for k3s user
  file:
    path: "/home/k3s/.kube"
    state: directory
    owner: "k3s"
    group: "k3s"
    mode: '0700'  
  become: true

# info: Enable kubectl shell auto-completion for k3s user

# note: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#enable-kubectl-autocompletion
# note: "complete -o default -F __start_kubectl k" string added to bashrc file (role: base)

- name: Install bash-completion
  tags: k3s,apt
  apt:
    name:
      - bash-completion
    state: present
    update_cache: true

- name: Configure bash-completion
  shell: |
    kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null    
  changed_when: false

- name: Set permissions for kubectl completion file
  file:
    path: /etc/bash_completion.d/kubectl
    owner: root
    group: root
    mode: '0644'

# info: Install sops and age for secrets management

# todo: Currently sops is not installed via apt, but via ansible-galaxy collection community.sops. Change if available via apt.

# note: sops is integrated with flux so doesn't have to be installed in the cluster. Installing on the manager for managing secrets from outside the cluster.

- name: Install sops and age for secrets management
  tags: apt
  apt:
    name:
#      - sops # note: Encryption tool for managing secrets
      - age # note: Tool for generating public/private key pairs for encryption
    state: present
    update_cache: true

- name: Install SOPS using community.sops role
  include_role:
    name: community.sops.install # note: Collection is installed via "configure_ansible_hosts.yml" playbook on ansiblehosts
  vars:
    sops_source: github         # or 'system' if available via apt
    sops_version: latest        # or specify a version like '3.8.1'